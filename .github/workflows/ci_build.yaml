name: CI build
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  OCAML_VER: "4.14.1-flambda"
  COQ_VER: "8.17.1"
      
jobs:
  wf:
    name: Completeness of _CoqProject
    runs-on: ubuntu-latest
    steps:
      - name: repo checkout
        uses: actions/checkout@v3
      - name: check
        run: |
          .github/scripts/check_projects.sh theories

  build:
    name: Continuous Intergration
    runs-on: ubuntu-latest
    steps:
      - name: get number of CPU cores
        uses: SimenB/github-actions-cpu-cores@v2
        id: cpu-cores

      - name: repo checkout
        uses: actions/checkout@v3

      - name: coq processing
        uses: coq-community/docker-coq-action@v1
        with:
          custom_image: ghcr.io/beluga-lang/mcltt:main
          install: |
            startGroup "Install Dependencies"
              opam repo add coq-released https://coq.inria.fr/opam/released
              opam update
              opam install menhir
              opam install coq-equations
              opam install coq-menhirlib
              opam install ppx_inline_test
              eval $(opam env)
            endGroup
          before_script: |
            startGroup "Fix the permission issue"
              sudo chown -R coq:coq .
            endGroup
          script: |
            startGroup "Build Coq lib"
              cd theories/
              make -j ${{ steps.cpu-cores.outputs.count }} pretty-timed
            endGroup
          after_script: |
            startGroup "Test parser"
              dune build
              dune runtest
            endGroup
          export: "OPAMJOBS OPAMYES"
        env:
          OPAMJOBS: ${{ steps.cpu-cores.outputs.count }}
          OPAMYES: "true"

      - name: permissions revert
        # to avoid a warning at cleanup time
        if: ${{ always() }}
        run: sudo chown -R 1001:116 .
